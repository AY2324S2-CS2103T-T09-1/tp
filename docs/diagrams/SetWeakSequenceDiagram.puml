@startuml
!include style.puml
skinparam ArrowFontStyle plain

box SetWeak LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":SetWeakThresholdCommandParser" as SetWeakThresholdCommandParser LOGIC_COLOR
participant "<<class>> \n ParseUtil" as ParseUtil LOGIC_COLOR
participant "f:SetWeakThresholdCommand" as SetWeakThresholdCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("setweak g/B")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("setweak g/B")
activate AddressBookParser

create SetWeakThresholdCommandParser
AddressBookParser -> SetWeakThresholdCommandParser
activate SetWeakThresholdCommandParser

SetWeakThresholdCommandParser --> AddressBookParser
deactivate SetWeakThresholdCommandParser

AddressBookParser -> SetWeakThresholdCommandParser : parse("g/B")
activate SetWeakThresholdCommandParser

SetWeakThresholdCommandParser -> ParseUtil : parseGrade("g/B")
activate ParseUtil

ParseUtil -> SetWeakThresholdCommandParser
deactivate ParseUtil

create SetWeakThresholdCommand
SetWeakThresholdCommandParser -> SetWeakThresholdCommand : SetWeakThresholdCommand(grade)
activate SetWeakThresholdCommand

SetWeakThresholdCommand --> SetWeakThresholdCommandParser :
deactivate SetWeakThresholdCommand

SetWeakThresholdCommandParser --> AddressBookParser : f
deactivate SetWeakThresholdCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
SetWeakThresholdCommandParser -[hidden]-> AddressBookParser
destroy SetWeakThresholdCommandParser

AddressBookParser --> LogicManager : f
deactivate AddressBookParser

LogicManager -> SetWeakThresholdCommand : execute(m)
activate SetWeakThresholdCommand

SetWeakThresholdCommand -> Grade : modifyThreshold(grade)
activate Grade
Grade --> SetWeakThresholdCommand
deactivate Grade

SetWeakThresholdCommand -> Model : updateFilteredPersonList(p)
activate Model

Model --> SetWeakThresholdCommand
deactivate Model

create CommandResult
SetWeakThresholdCommand -> CommandResult
activate CommandResult

CommandResult --> SetWeakThresholdCommand
deactivate CommandResult

SetWeakThresholdCommand --> LogicManager : r
deactivate SetWeakThresholdCommand

[<--LogicManager
deactivate LogicManager
@enduml
